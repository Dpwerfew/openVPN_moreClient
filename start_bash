#!/bin/bash

# Update package lists
sudo apt update

# Install necessary packages with automatic "Y" confirmation
sudo apt install -y openvpn easy-rsa net-tools curl apache2

# Copy files to /etc/openvpn/
sudo cp -R /usr/share/easy-rsa /etc/openvpn/
cd /etc/openvpn/easy-rsa

# Set EASYRSA environment variable to the current directory
export EASYRSA=$(pwd)

# Remove the .rnd file to avoid passphrase request
rm -f .rnd

# Initialize the public key infrastructure
sudo ./easyrsa init-pki

# Build the certificate authority (CA) without passphrase request
sudo EASYRSA_BATCH=1 ./easyrsa build-ca nopass

# Create a directory for keys and certificates
mkdir /etc/openvpn/certs/

# Copy the CA certificate to the new directory
cp /etc/openvpn/easy-rsa/pki/ca.crt /etc/openvpn/certs/ca.crt

# Generate a server key and certificate request with a default name (server)
echo -e "Name_server\n\n\n\n\n\n\n\n\n\n" | sudo ./easyrsa gen-req server nopass

# Sign the server certificate request with the CA key
echo -e "yes" | sudo ./easyrsa sign-req server server

# Generate the Diffie-Hellman parameters file
openssl dhparam -out /etc/openvpn/certs/dh2048.pem 2048

# Generate the HMAC key
yes | openvpn --genkey --secret /etc/openvpn/certs/ta.key

# Copy the generated server certificate and key to /etc/openvpn/certs/
sudo cp /etc/openvpn/easy-rsa/pki/issued/server.crt /etc/openvpn/certs/
sudo cp /etc/openvpn/easy-rsa/pki/private/server.key /etc/openvpn/certs/

# Check the presence of required files in the /etc/openvpn/certs/ directory
file_count=$(ls -1 /etc/openvpn/certs/ | wc -l)
if [ "$file_count" -eq 5 ]; then
    echo "All required files are present in the /etc/openvpn/certs/ directory."
else
    echo "Error: Not all required files are present in the /etc/openvpn/certs/ directory."
fi

# Navigate to the /etc/openvpn directory
cd /etc/openvpn

# Use wget to download the server.conf file from the GitHub URL with overwrite
wget -O server.conf https://raw.githubusercontent.com/Dpwerfew/openVPN/main/server.conf

# Start the OpenVPN service
sudo systemctl start openvpn@server.service

# Enable the OpenVPN service to start on boot
sudo systemctl enable openvpn@server.service

# Create the /root/bin/ directory if it doesn't exist
mkdir -p /root/bin/

# Navigate to the /root/bin directory
cd /root/bin

# Use wget to download the vpn_route.sh file from the GitHub URL with overwrite
wget -O vpn_route.sh https://raw.githubusercontent.com/Dpwerfew/openVPN/main/vpn_route.sh

# Set the network interface for internet access dynamically
sed -i "s/DEV='[^']*'/DEV='$(route | grep '^default' | grep -o '[^ ]*$')'/g" /root/bin/vpn_route.sh

# Make the script executable
chmod 755 /root/bin/vpn_route.sh

# Execute the vpn_route.sh script
bash /root/bin/vpn_route.sh

# Navigate to the /etc/systemd/system directory
cd /etc/systemd/system

# Use wget to download the openvpn-server-routing.service file from the GitHub URL with overwrite
wget -O openvpn-server-routing.service https://raw.githubusercontent.com/Dpwerfew/openVPN/main/openvpn-server-routing.service

# Enable the openvpn-server-routing service
systemctl enable openvpn-server-routing

# Function to add a new OpenVPN user
add_user() {
  local USERNAME=$1
  cd /etc/openvpn/easy-rsa
  sudo ./easyrsa gen-req $USERNAME nopass
  echo -e "yes" | sudo ./easyrsa sign-req client $USERNAME

  # Create client config file with embedded certificates and keys
  cat <<EOF > /var/www/html/$USERNAME.ovpn
client
dev tun
proto udp
remote $(curl -4 ifconfig.co) 1194
resolv-retry infinite
nobind
persist-key
persist-tun
ca [inline]
cert [inline]
key [inline]
tls-auth [inline] 1
cipher AES-256-CBC
verb 3
<ca>
$(cat /etc/openvpn/certs/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/easy-rsa/pki/issued/$USERNAME.crt)
</cert>
<key>
$(cat /etc/openvpn/easy-rsa/pki/private/$USERNAME.key)
</key>
<tls-auth>
$(cat /etc/openvpn/certs/ta.key)
</tls-auth>
EOF

  echo "User $USERNAME added successfully. Configuration file: /var/www/html/$USERNAME.ovpn"
}

# Add new users
add_user "client2"
add_user "client3"

# Restart the OpenVPN service to apply changes
sudo systemctl restart openvpn@server.service

# Get the server's IPv4 address
server_ip=$(curl -4 ifconfig.co)

# Display the URL to the user
echo -e "Your files are available at the following URLs:"
echo -e "Client2: http://$server_ip/openvpn-client-config.ovpn"
echo -e "Client3: http://$server_ip/openvpn-client-config.ovpn"
