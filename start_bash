#!/bin/bash

# Function to add a new OpenVPN user
add_user() {
  local USERNAME=$1
  local CONFIG_FILE="/var/www/html/$USERNAME.ovpn"
  local SERVER_IP=$(curl -4 ifconfig.co)

  cd /etc/openvpn/easy-rsa
  sudo ./easyrsa gen-req $USERNAME nopass
  echo -e "yes" | sudo ./easyrsa sign-req client $USERNAME

  # Create client config file with embedded certificates and keys
  cat <<EOF > $CONFIG_FILE
# Role
client

# OpenVPN server IP
remote $SERVER_IP

# OpenVPN server port, matching server configuration
port 1194

# Interface
dev tun

# OpenVPN protocol, matching the server
proto udp

# Hostname resolution (for changing internet connections)
resolv-retry infinite

# Bind to a local port
nobind

# Default gateway
redirect-gateway def1 bypass-dhcp

# Don't disconnect interfaces or re-read keys when tunnel goes down
persist-key
persist-tun

# Additional security
remote-cert-tls server

# HMAC key
key-direction 1

# Encryption
cipher AES-256-CBC

# Verbosity level
verb 3

<ca>
$(cat /etc/openvpn/certs/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/easy-rsa/pki/issued/$USERNAME.crt)
</cert>
<key>
$(cat /etc/openvpn/easy-rsa/pki/private/$USERNAME.key)
</key>
<tls-auth>
$(cat /etc/openvpn/certs/ta.key)
</tls-auth>
EOF

  echo "User $USERNAME added successfully. Configuration file: $CONFIG_FILE"
}

# Add new users
add_user "client2"
add_user "client3"

# Restart the OpenVPN service to apply changes
sudo systemctl restart openvpn@server.service

# Get the server's IPv4 address
server_ip=$(curl -4 ifconfig.co)

# Display the URL to the user
echo -e "Your files are available at the following URLs:"
echo -e "Client2: http://$server_ip/client2.ovpn"
echo -e "Client3: http://$server_ip/client3.ovpn"
